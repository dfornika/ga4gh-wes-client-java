/*
 * Workflow Execution Service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.dfornika.ga4ghwes.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;

/**
 * RunLog
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-03-21T18:04:40.054Z[GMT]")public class RunLog {

  @SerializedName("run_id")
  private String runId = null;

  @SerializedName("request")
  private RunRequest request = null;

  @SerializedName("state")
  private State state = null;

  @SerializedName("run_log")
  private Log runLog = null;

  @SerializedName("task_logs")
  private List<Log> taskLogs = null;

  @SerializedName("outputs")
  private Object outputs = null;
  public RunLog runId(String runId) {
    this.runId = runId;
    return this;
  }

  

  /**
  * workflow run ID
  * @return runId
  **/
  @Schema(description = "workflow run ID")
  public String getRunId() {
    return runId;
  }
  public void setRunId(String runId) {
    this.runId = runId;
  }
  public RunLog request(RunRequest request) {
    this.request = request;
    return this;
  }

  

  /**
  * Get request
  * @return request
  **/
  @Schema(description = "")
  public RunRequest getRequest() {
    return request;
  }
  public void setRequest(RunRequest request) {
    this.request = request;
  }
  public RunLog state(State state) {
    this.state = state;
    return this;
  }

  

  /**
  * Get state
  * @return state
  **/
  @Schema(description = "")
  public State getState() {
    return state;
  }
  public void setState(State state) {
    this.state = state;
  }
  public RunLog runLog(Log runLog) {
    this.runLog = runLog;
    return this;
  }

  

  /**
  * Get runLog
  * @return runLog
  **/
  @Schema(description = "")
  public Log getRunLog() {
    return runLog;
  }
  public void setRunLog(Log runLog) {
    this.runLog = runLog;
  }
  public RunLog taskLogs(List<Log> taskLogs) {
    this.taskLogs = taskLogs;
    return this;
  }

  public RunLog addTaskLogsItem(Log taskLogsItem) {
    if (this.taskLogs == null) {
      this.taskLogs = new ArrayList<Log>();
    }
    this.taskLogs.add(taskLogsItem);
    return this;
  }

  /**
  * The logs, and other key info like timing and exit code, for each step in the workflow run.
  * @return taskLogs
  **/
  @Schema(description = "The logs, and other key info like timing and exit code, for each step in the workflow run.")
  public List<Log> getTaskLogs() {
    return taskLogs;
  }
  public void setTaskLogs(List<Log> taskLogs) {
    this.taskLogs = taskLogs;
  }
  public RunLog outputs(Object outputs) {
    this.outputs = outputs;
    return this;
  }

  

  /**
  * The outputs from the workflow run.
  * @return outputs
  **/
  @Schema(description = "The outputs from the workflow run.")
  public Object getOutputs() {
    return outputs;
  }
  public void setOutputs(Object outputs) {
    this.outputs = outputs;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunLog runLog = (RunLog) o;
    return Objects.equals(this.runId, runLog.runId) &&
        Objects.equals(this.request, runLog.request) &&
        Objects.equals(this.state, runLog.state) &&
        Objects.equals(this.runLog, runLog.runLog) &&
        Objects.equals(this.taskLogs, runLog.taskLogs) &&
        Objects.equals(this.outputs, runLog.outputs);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(runId, request, state, runLog, taskLogs, outputs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunLog {\n");
    
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    runLog: ").append(toIndentedString(runLog)).append("\n");
    sb.append("    taskLogs: ").append(toIndentedString(taskLogs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
